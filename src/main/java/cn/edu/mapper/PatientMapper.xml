<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.mapper.PatientMapper">
    <select id="getAllNations" resultType="cn.edu.bean.Nation">
        select * from nation;
    </select>
    <select id="getAllPolitics" resultType="cn.edu.bean.PoliticsStatus">
        select * from politicsstatus;
    </select>
    <insert id="addPatient" parameterType="cn.edu.bean.Patient">
            insert into patient (name, gender,
      birthday, idCard, wedlock, nationId,
      nativePlace, politicId, email,
      phone, address, departmentId,
      jobLevelId, posId, engageForm,
      tiptopDegree, specialty, school,
      beginDate,workID,
      contractTerm, conversionTime,
      beginContract, endContract, workAge
      )
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
      #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER},
      #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
      #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
      #{tiptopDegree,jdbcType=VARCHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
      #{beginDate,jdbcType=DATE},#{workID,jdbcType=BIGINT},
      #{contractTerm,jdbcType=BIGINT}, #{conversionTime,jdbcType=DATE},
      #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
      )
    </insert>
    <select id="getMaxWorkID" resultType="Long">
        SELECT workID from patient where id=(select max(id) from patient)
    </select>
    <resultMap id="BaseResultMap" type="cn.edu.bean.Patient">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="idCard" property="idCard"/>
        <result column="wedlock" property="wedlock"/>
        <result column="nationId" property="nationId"/>
        <result column="nativePlace" property="nativePlace"/>
        <result column="politicId" property="politicId"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="departmentId" property="departmentId"/>
        <result column="jobLevelId" property="jobLevelId"/>
        <result column="posId" property="posId"/>
        <result column="engageForm" property="engageForm"/>
        <result column="tiptopDegree" property="tiptopDegree"/>
        <result column="specialty" property="specialty"/>
        <result column="school" property="school"/>
        <result column="beginDate" property="beginDate"/>
        <result column="workState" property="workState"/>
        <result column="workID" property="workID"/>
        <result column="contractTerm" property="contractTerm"/>
        <result column="conversionTime" property="conversionTime"/>
        <result column="notWorkDate" property="notWorkDate"/>
        <result column="beginContract" property="beginContract"/>
        <result column="endContract" property="endContract"/>
        <result column="workAge" property="workAge"/>
        <association property="department" javaType="cn.edu.bean.Department">
            <id property="id" column="did"/>
            <result property="name" column="dname"/>
        </association>
        <association property="jobLevel" javaType="cn.edu.bean.JobLevel">
            <id property="id" column="jlid"/>
            <result property="name" column="jlname"/>
            <result property="titleLevel" column="jlTitleLevel"/>
        </association>
        <association property="nation" javaType="cn.edu.bean.Nation">
            <id property="id" column="nid"/>
            <result property="name" column="nname"/>
        </association>
        <association property="position" javaType="cn.edu.bean.Position">
            <id property="id" column="pid"/>
            <result property="name" column="pname"/>
        </association>
        <association property="politicsStatus" javaType="cn.edu.bean.PoliticsStatus">
            <id property="id" column="psid"/>
            <result property="name" column="psname"/>
        </association>
        <association property="salary" javaType="cn.edu.bean.Salary">
            <id column="sid" jdbcType="INTEGER" property="id" />
            <result column="bonus" jdbcType="INTEGER" property="bonus" />
            <result column="lunchSalary" jdbcType="INTEGER" property="lunchSalary" />
            <result column="trafficSalary" jdbcType="INTEGER" property="trafficSalary" />
            <result column="basicSalary" jdbcType="INTEGER" property="basicSalary" />
            <result column="allSalary" jdbcType="INTEGER" property="allSalary" />
            <result column="pensionBase" jdbcType="INTEGER" property="pensionBase" />
            <result column="pensionPer" jdbcType="REAL" property="pensionPer" />
            <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
            <result column="medicalBase" jdbcType="INTEGER" property="medicalBase" />
            <result column="medicalPer" jdbcType="REAL" property="medicalPer" />
            <result column="accumulationFundBase" jdbcType="INTEGER" property="accumulationFundBase" />
            <result column="accumulationFundPer" jdbcType="REAL" property="accumulationFundPer" />
            <result column="sname" jdbcType="VARCHAR" property="name" />
        </association>
    </resultMap>
    <select id="getPatientByPage" resultMap="BaseResultMap">
        select e.*,jl.`id` as jlid,jl.`name` as jlname,jl.`titleLevel` as jlTitleLevel,d.`id` as did,d.`name` as
        dname,n.`id` as nid,n.`name` as nname,p.`id` as pid,p.`name` as pname,ps.`id` as psid,ps.`name` as psname from
        patient e,joblevel jl,department d,nation n,position p,politicsstatus ps where e.`posId`=p.`id` and
        e.`jobLevelId`=jl.`id` and e.`departmentId`=d.id and e.`nationId`=n.`id` and e.`politicId`=ps.`id` and e.`name`
        like concat('%',#{keywords},'%')
        <if test="engageForm!=null and engageForm!=''">
            AND e.engageForm=#{engageForm}
        </if>
        <if test="politicId!=null and politicId!=''">
            AND e.politicId=#{politicId}
        </if>
        <if test="nationId!=null and nationId!=''">
            AND e.nationId=#{nationId}
        </if>
        <if test="posId!=null and posId!=''">
            AND e.posId=#{posId}
        </if>
        <if test="jobLevelId!=null and jobLevelId!=''">
            AND e.jobLevelId=#{jobLevelId}
        </if>
        <if test="departmentId!=null and departmentId!=''">
            AND e.departmentId=#{departmentId}
        </if>
        <if test="startBeginDate!=null and endBeginDate!=null">
            AND e.beginDate BETWEEN #{startBeginDate} AND #{endBeginDate}
        </if>
        <if test="start!=null and size!=null">
            order by e.id limit #{start},#{size}
        </if>
    </select>
    <select id="getCountByKeywords" resultType="Long">
        SELECT count(*) FROM patient e WHERE e.name LIKE concat('%',#{keywords},'%')
        <if test="engageForm!=null and engageForm!=''">
            AND e.engageForm=#{engageForm}
        </if>
        <if test="politicId!=null and politicId!=''">
            AND e.politicId=#{politicId}
        </if>
        <if test="nationId!=null and nationId!=''">
            AND e.nationId=#{nationId}
        </if>
        <if test="posId!=null and posId!=''">
            AND e.posId=#{posId}
        </if>
        <if test="jobLevelId!=null and jobLevelId!=''">
            AND e.jobLevelId=#{jobLevelId}
        </if>
        <if test="departmentId!=null and departmentId!=''">
            AND e.departmentId=#{departmentId}
        </if>
        <if test="startBeginDate!=null and endBeginDate!=null">
            AND e.beginDate BETWEEN #{startBeginDate} AND #{endBeginDate}
        </if>
    </select>
    <update id="updatePatient">
        update patient
        <set>
            <if test="patient.name != null">
                name = #{patient.name,jdbcType=VARCHAR},
            </if>
            <if test="patient.gender != null">
                gender = #{patient.gender,jdbcType=CHAR},
            </if>
            <if test="patient.birthday != null">
                birthday = #{patient.birthday,jdbcType=DATE},
            </if>
            <if test="patient.idCard != null">
                idCard = #{patient.idCard,jdbcType=CHAR},
            </if>
            <if test="patient.wedlock != null">
                wedlock = #{patient.wedlock,jdbcType=CHAR},
            </if>
            <if test="patient.nationId != null">
                nationId = #{patient.nationId,jdbcType=INTEGER},
            </if>
            <if test="patient.nativePlace != null">
                nativePlace = #{patient.nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="patient.politicId != null">
                politicId = #{patient.politicId,jdbcType=INTEGER},
            </if>
            <if test="patient.email != null">
                email = #{patient.email,jdbcType=VARCHAR},
            </if>
            <if test="patient.phone != null">
                phone = #{patient.phone,jdbcType=VARCHAR},
            </if>
            <if test="patient.address != null">
                address = #{patient.address,jdbcType=VARCHAR},
            </if>
            <if test="patient.departmentId != null">
                departmentId = #{patient.departmentId,jdbcType=INTEGER},
            </if>
            <if test="patient.jobLevelId != null">
                jobLevelId = #{patient.jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="patient.posId != null">
                posId = #{patient.posId,jdbcType=INTEGER},
            </if>
            <if test="patient.engageForm != null">
                engageForm = #{patient.engageForm,jdbcType=VARCHAR},
            </if>
            <if test="patient.tiptopDegree != null">
                tiptopDegree = #{patient.tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="patient.specialty != null">
                specialty = #{patient.specialty,jdbcType=VARCHAR},
            </if>
            <if test="patient.school != null">
                school = #{patient.school,jdbcType=VARCHAR},
            </if>
            <if test="patient.beginDate != null">
                beginDate = #{patient.beginDate,jdbcType=DATE},
            </if>
            <if test="patient.workState != null">
                workState = #{patient.workState,jdbcType=CHAR},
            </if>
            <if test="patient.contractTerm != null">
                contractTerm = #{patient.contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="patient.conversionTime != null">
                conversionTime = #{patient.conversionTime,jdbcType=DATE},
            </if>
            <if test="patient.notWorkDate != null">
                notWorkDate = #{patient.notWorkDate,jdbcType=DATE},
            </if>
            <if test="patient.beginContract != null">
                beginContract = #{patient.beginContract,jdbcType=DATE},
            </if>
            <if test="patient.endContract != null">
                endContract = #{patient.endContract,jdbcType=DATE},
            </if>
        </set>
        where id = #{patient.id,jdbcType=BIGINT}
    </update>
    <delete id="deletePatientById">
        DELETE FROM patient WHERE id IN
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </delete>
    <insert id="addPatients">
        insert into patient (name, gender,
        birthday, idCard, wedlock, nationId,
        nativePlace, politicId, email,
        phone, address, departmentId,
        jobLevelId, posId, engageForm,
        tiptopDegree, specialty, school,
        beginDate,workID,
        contractTerm, conversionTime,
        beginContract, endContract, workAge
        )
        values
        <foreach collection="patients" item="patient" separator=",">
            (#{patient.name,jdbcType=VARCHAR}, #{patient.gender,jdbcType=CHAR},
            #{patient.birthday,jdbcType=DATE}, #{patient.idCard,jdbcType=CHAR}, #{patient.wedlock,jdbcType=CHAR},
            #{patient.nationId,jdbcType=BIGINT},
            #{patient.nativePlace,jdbcType=VARCHAR}, #{patient.politicId,jdbcType=BIGINT}, #{patient.email,jdbcType=VARCHAR},
            #{patient.phone,jdbcType=VARCHAR}, #{patient.address,jdbcType=VARCHAR}, #{patient.departmentId,jdbcType=BIGINT},
            #{patient.jobLevelId,jdbcType=BIGINT}, #{patient.posId,jdbcType=BIGINT}, #{patient.engageForm,jdbcType=VARCHAR},
            #{patient.tiptopDegree,jdbcType=VARCHAR}, #{patient.specialty,jdbcType=VARCHAR}, #{patient.school,jdbcType=VARCHAR},
            #{patient.beginDate,jdbcType=DATE},#{patient.workID,jdbcType=BIGINT},
            #{patient.contractTerm,jdbcType=BIGINT}, #{patient.conversionTime,jdbcType=DATE},
            #{patient.beginContract,jdbcType=DATE}, #{patient.endContract,jdbcType=DATE}, #{patient.workAge,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <select id="getPatientByPageShort" resultMap="BaseResultMap">
select e.*,d.`id` as did,d.`name` as dname,s.`id` as sid,s.`accumulationFundBase`,s.`accumulationFundPer`,s.`allSalary`,s.`basicSalary`,s.`bonus`,s.`createDate`,s.`lunchSalary`,s.`medicalBase`,s.`medicalPer`,s.`name` as sname,s.`pensionBase`,s.`pensionPer`,s.`trafficSalary` from patient e left join department d on e.`departmentId`=d.id left join patientsalary es on es.`eid`=e.`id` left join salary s on s.`id`=es.`sid` ORDER BY e.id limit #{start},#{size}
    </select>
</mapper>