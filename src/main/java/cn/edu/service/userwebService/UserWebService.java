
package cn.edu.service.userwebService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserWebService", targetNamespace = "http://webservice.openmeetings.apache.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWebService {


    /**
     * 
     * @param confirm
     * @param user
     * @param sid
     * @return
     *     returns cn.edu.service.userwebService.UserDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.AddResponse")
    public UserDTO add(
            @WebParam(name = "sid", targetNamespace = "")
                    String sid,
            @WebParam(name = "user", targetNamespace = "")
                    UserDTO user,
            @WebParam(name = "confirm", targetNamespace = "")
                    Boolean confirm);

    /**
     * 
     * @param sid
     * @return
     *     returns java.util.List<cn.edu.service.userwebService.UserDTO>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "get", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.Get")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.GetResponse")
    public List<UserDTO> get(
            @WebParam(name = "sid", targetNamespace = "")
                    String sid);

    /**
     * 
     * @param options
     * @param user
     * @param sid
     * @return
     *     returns cn.edu.service.userwebService.ServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRoomHash", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.GetRoomHash")
    @ResponseWrapper(localName = "getRoomHashResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.GetRoomHashResponse")
    public ServiceResult getRoomHash(
            @WebParam(name = "sid", targetNamespace = "")
                    String sid,
            @WebParam(name = "user", targetNamespace = "")
                    ExternalUserDTO user,
            @WebParam(name = "options", targetNamespace = "")
                    RoomOptionsDTO options);

    /**
     * 
     * @param id
     * @param sid
     * @return
     *     returns cn.edu.service.userwebService.ServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.DeleteResponse")
    public ServiceResult delete(
            @WebParam(name = "sid", targetNamespace = "")
                    String sid,
            @WebParam(name = "id", targetNamespace = "")
                    long id);

    /**
     * 
     * @param externaltype
     * @param externalid
     * @param sid
     * @return
     *     returns cn.edu.service.userwebService.ServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteExternal", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.DeleteExternal")
    @ResponseWrapper(localName = "deleteExternalResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.DeleteExternalResponse")
    public ServiceResult deleteExternal(
            @WebParam(name = "sid", targetNamespace = "")
                    String sid,
            @WebParam(name = "externaltype", targetNamespace = "")
                    String externaltype,
            @WebParam(name = "externalid", targetNamespace = "")
                    String externalid);

    /**
     * 
     * @param pass
     * @param user
     * @return
     *     returns cn.edu.service.userwebService.ServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "cn.edu.service.userwebService.LoginResponse")
    public ServiceResult login(
            @WebParam(name = "user", targetNamespace = "")
                    String user,
            @WebParam(name = "pass", targetNamespace = "")
                    String pass);

}
